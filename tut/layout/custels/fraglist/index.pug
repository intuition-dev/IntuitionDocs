head
    include /layout/headFrag
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/gh/intuition-dev/intuDS@v1.0.2/src/css/min.min.css')

body

    .fragCont
        p
        button#prev.btn.butOff.classless(disabled) Previous 
        .topSpace
        .pagCont
            #data-container
            #pagination-container
        
        button#next.btn.butOff.classless(disabled) Next 

        template#temp1
            span {{#.}}
                .fragTitle {{title}}
                hr
                br
            span {{/.}}
    
style.

    .topSpace {
        height: 1.6em;
    }

    .fragCont {
        margin-left: 1em;
        display: flex;
        flex-direction: column;
        height: calc(100% - 1.5em);
    }    
    .pagCont {
        flex-grow: 1;
    }

    .fragTitle {
        font-weight: 400;
    }

    .butOn {
        font-weight: normal;
        pointer-events: auto;
    }
    .butOff {
        font-weight: lighter;
        pointer-events: none;
   }


script.
    toolBeltDefault()
    loadFonts(['Open+Sans:300,400'])


    function onRowClick(el) {
        const selector = 'tr'
        var iel = el.target.closest(selector)
        if (!iel) return

        var id = iel.getAttribute('data-name')
        console.log(id)

        let proB = CustelsListVM.fetchCode(id)

        CustelsListVM.setText(proB)
    }//()

    depp.require(['jquery', 'pagination', 'mustache', 'js-yaml', 'poly'], function() {
        console.log('ready')
        // data
        fetchFrags('').then(function(dat){
            console.log(dat)
            onFragData(dat.frags)
        })

        var table = document.getElementById('data-container')
        table.addEventListener('click', onRowClick)
 
        document.getElementById("prev").addEventListener("click", function(){
                console.log('P')
                $('#pagination-container').pagination('previous')
            })

        document.getElementById("next").addEventListener("click", function(){
            console.log('N')
            $('#pagination-container').pagination('next')
        })
        
    })// req

    function fetchFrags(path) {  //polyIO
        return new Promise(function (resolve, reject) {
            fetch('dat.yaml', {
                cache: 'default',
                keepalive: true
            }).then(function (fullResp) {
                if (!fullResp.ok)
                    reject(fullResp.statusText)
                return fullResp.text()
                }).then(function (ys) {
                    let y = jsyaml.safeLoad(ys)
                    resolve(y)
                })
            .catch(function (err) {
                console.log(err)
                reject(err)
            })
        })//pro
    }

    function onFragData(data) {        

        console.log('data')
        var computedItems = $('.pagCont').height() / 40   // pixels    
        console.log( $('.pagCont').height(), computedItems ) 

        $('#pagination-container').pagination({
            pageSize: computedItems,
            showPageNumbers: false,
            showPrevious: false,
            showNext: false,

            dataSource: data,

            callback: function(data, pagination) { // on page
                console.log('pg')
                //pg, sz, tot
                setTimeout(function(){
                    showHide(pagination.pageNumber, pagination.pageSize, pagination.totalNumber)
                },1)

                var html = renderMustache('temp1', data)
                $('#data-container').html(html)
            }//cb
        })

    }//()

    function showHide(pg, sz, tot) {
        console.log('sh')
        if(pg==1)  { but('prev', false ) }
            else but('prev', true) 

        var cur = pg * sz
        console.log(cur, tot)
        if(cur < tot) { // more 
            but('next', true) 
        } else { // to much
            but('next', false) 
        }
    }

    function but(id, on) {
        console.log(id,on)
        $b = $('#'+id)
        $b.prop('disabled', !on)
        if(on) {
            $b.removeClass( "classless" )
            $b.removeClass( "butOff" )
            $b.addClass(    "btn-a" )
            $b.addClass(    "butOn" )

        } else {
            $b.removeClass( "btn-a" )
            $b.removeClass( "butOn" )
            $b.addClass(    "classless" )
            $b.addClass(    "butOff" )
        }
    }//()