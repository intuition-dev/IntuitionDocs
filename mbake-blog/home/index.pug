extends /layout/layout

block main
    .section-cards
        .input-group#srch-form
            input#srchFld.form-input.input-lg(type='text')
            button#srchBut.btn.btn-primary.input-group-btn.btn-lg
                i.fas.fa-search
                
    card-comp  
    
    #pagination-container.custom-pagination
    
    script.
        depp.require(['axios'], function() {

            axios.get('../posts/items.json').then(function(resp) {
                let posts = resp.data;
                let sortedItems = resp.data.items.sort(function(a, b) {
                    return (a.publishOrder < b.publishOrder) ? -1 : (a.publishOrder > b.publishOrder) ? 1 : 0;
                });
                let items = new List(sortedItems);
            
                const tag = riot.mount('card-comp')[0]; 
                
                depp.require(['cssJs'], function() {

                    const srchOptions = {
                        shouldSort: true,
                        threshold: 0.3,
                        maxPatternLength: 64,
                        keys: [
                            "title",
                            "summary",
                            "content_text",
                            "image",
                            "tags"
                        ]
                    }

                    $('#srch-form').disableAutoFill();

                    pgContainer =[];
                    pgContCount=-1;
                    setupPg(guessShow(), posts);
                    fuse = new Fuse(items, srchOptions);

                    $("#srchBut").click(onSrch);
                });
                
                function setupPg(perPage, posts_) {
                    console.log('PG');
                    pgContCount++;
                    console.log('s', pgContCount);
                    pgContainer[pgContCount] = $('#pagination-container');
                    
                    perPage = 6;

                    pgContainer[pgContCount].pagination({
                        className: 'paginationjs-theme-blue paginationjs-big',
                        dataSource: posts_,
                        locator: 'items',
                        pageSize: perPage,
                        autoHidePrevious: true,
                        autoHideNext: true,
                        callback: function(data, pagination) {
                            tag.render(data);
                        }
                    })

                }//()
                
                function userSzSc() {
                    //- console.log('resize|scroll');
                    guessShow();
                }

                function guessShow() {
                    let n = ( $(window).width() * $(window).height()  ) / ( 300 * 400) * .9;
                    n = Math.round( n * .7);
                    return n;
                }

                function onSrch() {
                    let s = $( "#srchFld" ).val()
                    //- console.log('srch', s);
                    pgContainer[pgContCount].pagination('disable');
                    pgContainer[pgContCount].pagination('hide');
                    pgContainer[pgContCount].pagination('destroy');

                    if(!s || s.length < 1) {
                        setupPg(guessShow(), posts);
                        return;
                    }//fi

                    //else we search
                    let items = fuse.search(s);
                    if(!items || items.length < 1) {// not found
                        tag.render();
                        return;
                    }//fi

                    let found = {};
                    found.items = items;
                    setupPg(guessShow(), found);
                }//()
                    
            });
            
        });